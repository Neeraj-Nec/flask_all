version: 0.2

env:
  variables:
    IMAGE_NAME: "flask-app"
    EC2_USER: "ec2-user"                  # The user for your EC2 instance (usually ec2-user or ubuntu)
    EC2_HOST: "<EC2_PUBLIC_IP>"           # Replace with your EC2 public IP address
    EC2_SSH_KEY: "ec2-key.pem"            # The private SSH key to access EC2
    S3_BUCKET: "<your-s3-bucket-name>"    # Replace with your S3 bucket name

phases:
  install:
    runtime-versions:
      python: 3.10
      docker: 20
    commands:
      - echo Installing dependencies...
      - pip install -r requirements.txt

  pre_build:
    commands:
      - echo Running unit tests...
      - python -m unittest discover -s tests

  build:
    commands:
      - echo Building Docker image...
      - docker-compose build

  post_build:
    commands:
      - echo Saving Docker image...
      - docker save flask-app -o flask-app.tar
      - echo Uploading Docker image to S3...
      - aws s3 cp flask-app.tar s3://$S3_BUCKET/$IMAGE_NAME.tar

      - echo Preparing SSH access to EC2...
      - mkdir -p ~/.ssh
      - aws s3 cp s3://$S3_BUCKET/$EC2_SSH_KEY ~/.ssh/$EC2_SSH_KEY
      - chmod 600 ~/.ssh/$EC2_SSH_KEY

      - echo Connecting to EC2 and pulling Docker image...
      - |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/$EC2_SSH_KEY $EC2_USER@$EC2_HOST << 'EOF'
        aws s3 cp s3://$S3_BUCKET/flask-app.tar .
        docker load -i flask-app.tar
        
        # Navigate to the directory where docker-compose.yml is located
        cd /home/ec2-user/your-app-directory
        
        # Bring up the app using docker-compose
        docker-compose up -d
        
        EOF

artifacts:
  files:
    - '**/*'
